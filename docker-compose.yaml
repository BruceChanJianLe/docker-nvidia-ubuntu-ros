services:
  cuda:
    build:
      context: ./docker_build
      dockerfile: u${UBUNTU_VERSION}/cuda/ros${ROS_VERSION}/Dockerfile
      args:
        user_id: ${user_id}
    image:
      ubuntu${UBUNTU_VERSION}.04:${PACKAGE_VERSION}-cnvros${ROS_VERSION}
    profiles:
      - cuda
    network_mode:
      host
    environment:
      - DISPLAY=$DISPLAY
      - QT_X11_NO_MITSHM=1
      - XAUTHORITY=$XAUTH
      - WAYLAND_DISPLAY=/tmp/$WAYLAND_DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /etc/localtime:/etc/localtime:ro
      - /dev:/dev
      - /media:/media

  cuda_runtime:
    build:
      context: ./docker_build
      dockerfile: u${UBUNTU_VERSION}/cuda_runtime/ros${ROS_VERSION}/Dockerfile
      args:
        user_id: ${user_id}
    image:
      ubuntu${UBUNTU_VERSION}.04:${PACKAGE_VERSION}-cnvros2-runtime
    profiles:
      - cuda_runtime
    network_mode:
      host
    environment:
      - DISPLAY=$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /etc/localtime:/etc/localtime:ro
      - /dev:/dev
      - /media:/media

  non_nvidia:
    build:
      context: ./docker_build
      dockerfile: u${UBUNTU_VERSION}/non_nvidia/ros${ROS_VERSION}/Dockerfile
      args:
        user_id: ${user_id}
    image:
      ubuntu${UBUNTU_VERSION}.04:${PACKAGE_VERSION}-ros${ROS_VERSION}
    profiles:
      - non_nvidia
    network_mode:
      host
    environment:
      - DISPLAY=$DISPLAY
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /etc/localtime:/etc/localtime:ro
      - /dev:/dev
      - /media:/media
